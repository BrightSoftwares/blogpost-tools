name: Reusable Auto Move and Publish Posts

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      transcriptdownloader_srcpath:
        required: true
        type: string
      transcriptdownloader_dstpath:
        required: true
        type: string
      transcriptdownloader_dryrun:
        required: true
        type: boolean
      rssconverter_srcpath:
        required: true
        type: string
      rssconverter_dstpath:
        required: true
        type: string
      rssconverter_dryrun:
        required: true
        type: boolean
      featuredimagefinder_srcpath:
        required: true
        type: string
      featuredimagefinder_dstpath:
        required: true
        type: string
      featuredimagefinder_dryrun:
        required: true
        type: boolean
      featuredimagefinder_alreadyuseditems:
        required: true
        type: string
      featuredimagefinder_searchresultsfile:
        required: true
        type: string
      featuredimagefinder_max_results:
        required: true
        type: string
      featuredimagefinder_cloudinarydestfolder:
        required: true
        type: string
      featuredimagefinder_cloudinarytransformation:
        required: true
        type: string
      pretifier_srcpath:
        required: true
        type: string
      pretifier_dstpath:
        required: true
        type: string
      pretifier_dryrun:
        required: true
        type: boolean
      pretifier_wordpressfrontmatter:
        required: true
        type: boolean
      pretifier_postauthor:
        required: true
        type: string
      pretifier_silotermtolinksfile:
        required: true
        type: string
      pretifier_silotermtocategoriesfile:
        required: true
        type: string
      pretifier_defaultauthor:
        required: true
        type: string
      pretifier_defaultlayout:
        required: true
        type: string
      pretifier_generatesilotermtolinksfileifmissing:
        required: true
        type: boolean
      pretifier_generatesilotermtocategoriesfileifmissing:
        required: true
        type: boolean
      pretifier_categorytype:
        required: true
        type: string
      pretifier_filegenerationsrcpath:
        required: true
        type: string
      autoschedule_srcpath:
        required: true
        type: string
      autoschedule_dstpath:
        required: true
        type: string
      autoschedule_dryrun:
        required: true
        type: boolean
      autoschedule_days_mask:
        required: true
        type: string
      autoschedule_nbdaysahead:
        required: true
        type: number
      manualpublication_srcpath:
        required: true
        type: string
      manualpublication_dstpath:
        required: true
        type: string
      manualpublication_dryrun:
        required: true
        type: boolean
    secrets:
      unsplash_access_key:
        required: true
      cloudinary_url:
        required: true

env:
  CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
  

      

jobs:
  move_and_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      ## (1) Find blog post ideas
      # rss, keywords, yt_finder
      # news-to-blogpost: from rss feed -> rss inspired post
      # suggestions-to-blogpost: from keyword suggestion -> find youtube videos
      # youtube-vid-finder: from found videos -> download transcript

      ## (2) Convert ideas to blog post proposals
      # transcript-downloader: from download transcript -> generated raw content
      - name: (1) Move from download transcript -> generated raw content
        uses: BrightSoftwares/blogpost-tools/auto-move-to-destination@main
        with:
          src_path: ${{ inputs.transcriptdownloader_srcpath }}
          dst_path: ${{ inputs.transcriptdownloader_dstpath }}
          dry_run: ${{ inputs.transcriptdownloader_dryrun }}
          function_to_run: move_transcriptdownloader_to_destination
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # bloginspritation-converter: from rss inpired post -> generated raw content
      - name: (3) Move from rss inpired post -> generated raw content
        uses: BrightSoftwares/blogpost-tools/auto-move-to-destination@main
        with:
          src_path: ${{ inputs.rssconverter_srcpath }} # /github/workspace/_drafts/200_rss_inspired_posts/
          dst_path: ${{ inputs.rssconverter_dstpath }} # /github/workspace/_drafts/300_generated_raw_content/
          dry_run: ${{ inputs.rssconverter_dryrun }} # false
          function_to_run: move_iscontentenough_to_destination

      ## (3) Clean up the post proposals
      # Manual cleanup: from post proposal -> refined content

      ## (4) Add seo and visual resources
      # unsplash-to-cloudinary: from refined content -> featured image generated
      - name: (4) Unsplash to Cloudinary - Beautify folder
        uses: BrightSoftwares/blogpost-tools/unsplash-to-cloudinary@main
        with:
          src_folder: ${{ inputs.featuredimagefinder_srcpath }} # /github/workspace/_drafts/400_refined_content/
          unsplash_access_key: ${{ secrets.UNSPLASH_ACCESS_KEY }}
          already_used_items: ${{ inputs.featuredimagefinder_alreadyuseditems }} # /github/workspace/_drafts/unsplash_videos_used.csv
          search_results_file: ${{ inputs.featuredimagefinder_searchresultsfile }} # /github/workspace/_drafts/unsplash_search_results.csv
          max_results: ${{ inputs.featuredimagefinder_max_results }} # 30
          cloudinary_destfolder: ${{ inputs.featuredimagefinder_cloudinarydestfolder }} # eagles-techs.com.blog/
          cloudinary_transformation: ${{ inputs.featuredimagefinder_cloudinarytransformation }} # ETBlogImage
          cloudinary_url: ${{ secrets.cloudinary_url }}
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: (4.1) Move from refined content -> featured image generated
        uses: BrightSoftwares/blogpost-tools/auto-move-to-destination@main
        with:
          src_path: ${{ inputs.featuredimagefinder_srcpath }} # /github/workspace/_drafts/400_refined_content/
          dst_path: ${{ inputs.featuredimagefinder_dstpath }} # /github/workspace/_drafts/500_featured_image_generated/
          dry_run: ${{ inputs.featuredimagefinder_dryrun }} # false
          function_to_run: move_unsplashtocloudinary_to_destination

      # # jekyll-filename-pretifier: from featured image generated -> pretified
      #- name: (5) Cleanup the file names
      #  uses: BrightSoftwares/blogpost-tools/jekyll-filename-pretifier@main
      #  with:
      #    drafts_path: ${{ inputs.pretifier_srcpath }} # /github/workspace/_drafts/500_featured_image_generated/
      #    wordpress_frontmatter: ${{ inputs.pretifier_wordpressfrontmatter }} # true
      #    post_author: ${{ inputs.pretifier_postauthor }} # 3
      #    dry_run: ${{ inputs.pretifier_dryrun }} # false
      #    siloterm_to_links_file: ${{ inputs.pretifier_silotermtolinksfile }} # /github/workspace/_seo/jekyll-filename-pretifier/silot_term_to_links.csv
      #    siloterm_to_categories_file: ${{ inputs.pretifier_silotermtocategoriesfile }} # /github/workspace/_seo/jekyll-filename-pretifier/silot_term_to_categories.csv
      #    default_author: ${{ inputs.pretifier_defaultauthor }} # full
      #    default_layout: ${{ inputs.pretifier_defaultlayout }} # flexstart-blog-single
      #    category_type: ${{ inputs.pretifier_categorytype }} # category
      #    generate_silotermtolinksfile_if_missing: ${{ inputs.pretifier_generatesilotermtolinksfileifmissing }} # true
      #    generate_silotermtocategoriesfile_if_missing: ${{ inputs.pretifier_generatesilotermtocategoriesfileifmissing }} # true
      #    file_generation_src_path: ${{ inputs.pretifier_filegenerationsrcpath }} # /github/workspace/_posts/
      #
      #- name: (5.1) Move from featured image generated -> pretified
      #  uses: BrightSoftwares/blogpost-tools/auto-move-to-destination@main
      #  with:
      #    src_path: ${{ inputs.pretifier_srcpath }} # /github/workspace/_drafts/500_featured_image_generated/
      #    dst_path: ${{ inputs.pretifier_dstpath }} # /github/workspace/_drafts/501_beautified_content/
      #    dry_run: ${{ inputs.pretifier_dryrun }} # false
      #    function_to_run: move_jekyllfilenamepretifier_to_destination

      # auto-schedule-posts: pretified -> auto-scheduled (ready to publish)
      - name: (6) Reschedule posts - beautified posts
        uses: BrightSoftwares/blogpost-tools/auto-schedule-posts@main
        with:
          src_folder: ${{ inputs.autoschedule_srcpath }} # /github/workspace/_drafts/501_beautified_content/
          dest_folder: ${{ inputs.autoschedule_dstpath }} # /github/workspace/_drafts/501_beautified_content/
          dry_run: ${{ inputs.autoschedule_dryrun }} # false
          days_mask: ${{ inputs.autoschedule_days_mask }} # Mon Wed Fri Sun
          nb_days_ahead: ${{ inputs.autoschedule_nbdaysahead }} # 2
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: (7) Cleanup the file names
        uses: BrightSoftwares/blogpost-tools/jekyll-filename-pretifier@main
        with:
          drafts_path: ${{ inputs.autoschedule_dstpath }} # /github/workspace/_drafts/501_beautified_content/
          wordpress_frontmatter: ${{ inputs.pretifier_wordpressfrontmatter }} # true
          post_author: ${{ inputs.pretifier_postauthor }} # 3
          dry_run: ${{ inputs.pretifier_dryrun }} # false
          siloterm_to_links_file: ${{ inputs.pretifier_silotermtolinksfile }} # /github/workspace/_seo/jekyll-filename-pretifier/silot_term_to_links.csv
          siloterm_to_categories_file: ${{ inputs.pretifier_silotermtocategoriesfile }} # /github/workspace/_seo/jekyll-filename-pretifier/silot_term_to_categories.csv
          default_author: ${{ inputs.pretifier_defaultauthor }} # full
          default_layout: ${{ inputs.pretifier_defaultlayout }} # flexstart-blog-single
          category_type: ${{ inputs.pretifier_categorytype }} # category
          generate_silotermtolinksfile_if_missing: ${{ inputs.pretifier_generatesilotermtolinksfileifmissing }} # true
          generate_silotermtocategoriesfile_if_missing: ${{ inputs.pretifier_generatesilotermtocategoriesfileifmissing }} # true
          file_generation_src_path: ${{ inputs.pretifier_filegenerationsrcpath }} # /github/workspace/_posts/
          force_pretify: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      #- name: (7.1) Move pretified -> auto-scheduled (ready to publish)
      #  uses: BrightSoftwares/blogpost-tools/auto-move-to-destination@main
      #  with:
      #    src_path: ${{ inputs.autoschedule_srcpath }} # /github/workspace/_drafts/501_beautified_content/
      #   dst_path: ${{ inputs.autoschedule_dstpath }} # /github/workspace/_drafts/600_auto_scheduled/
      #    dry_run: ${{ inputs.autoschedule_dryrun }} # false
      #    function_to_run: move_autoscheduleposts_to_destination
      
      ## (5) Manual publication ? from auto-scheduled -> _posts/<lang>
      # Check that all the post's attributes are there, like the layout, author, etc.
      - name: (8) Manual publication ? from auto-scheduled -> _posts/<lang>
        uses: BrightSoftwares/blogpost-tools/auto-move-to-destination@main
        with:
          src_path: ${{ inputs.manualpublication_srcpath }} # /github/workspace/_drafts/600_auto_scheduled/
          dst_path: ${{ inputs.manualpublication_dstpath }} # /github/workspace/_posts/
          dry_run: ${{ inputs.manualpublication_dryrun }} # false
          function_to_run: move_readyforpublication_to_destination
          
      - name: (9) Commit changes if there is any
        run: |
          # date > generated.txt
          CHANGES_EXIST="$(git status --porcelain | wc -l)"
          echo "There are $CHANGES_EXIST changes to commit"
          if [ "$CHANGES_EXIST" -eq 0 ]; then
            echo "There are no changes to commit"
          else
            echo "Committing changes"
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "generated and changed files"
            git pull --rebase
            git push
          fi
