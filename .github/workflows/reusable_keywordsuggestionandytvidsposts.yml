name: Generate keyword suggestions on a weekly basis

on:
  #push:
  #  branches:
  #      - master
  workflow_dispatch:
  workflow_call:
    inputs:
        
      generatenewkeywordsuggestions_keywordseed: # /github/workspace/_drafts/keywords.csv
        required: true
        type: string
      generatenewkeywordsuggestions_keywordsuggestionsgenerationfolder: # /github/workspace/_drafts
        required: true
        type: string
      generatenewkeywordsuggestions_draftspath: # /github/workspace/_drafts/
        required: true
        type: string
      generatenewkeywordsuggestions_keywordsuggestionsblogpostfile: # keyword_suggestions_merged_blogpost_candidates.csv
        required: true
        type: string
      generatenewkeywordsuggestions_keywordminvolumeeligible: # 1
        required: true
        type: number
      generatenewkeywordsuggestions_keywordmaxvolumeeligible: # 500000
        required: true
        type: number

      generateblogpostcandidatesdata10_100_srcfolder: # /github/workspace/_drafts/
        required: true
        type: string
      generateblogpostcandidatesdata10_100_keywordsuggestiongenerationfolder: # /github/workspace/_drafts/
        required: true
        type: string
      generateblogpostcandidatesdata10_100_keywordsuggestiongenerationfile: # /github/workspace/_drafts/keyword_suggestions.csv
        required: true
        type: string
      generateblogpostcandidatesdata10_100_keywordsuggestionsblogpostfile: # /github/workspace/_drafts/kw_blogpost_candidates_10_100.csv
        required: true
        type: string
      generateblogpostcandidatesdata10_100_keywordminvolumeeligible: # 10
        required: true
        type: number
      generateblogpostcandidatesdata10_100_keywordmaxvolumeeligible: # 100
        required: true
        type: number

      generateblogpostcandidatesdata100_500_srcfolder: # /github/workspace/_drafts/
        required: true
        type: string
      generateblogpostcandidatesdata100_500_keyword_suggestion_generation_folder: # /github/workspace/_drafts/
        required: true
        type: string
      generateblogpostcandidatesdata100_500_keyword_suggestion_generation_file: # /github/workspace/_drafts/keyword_suggestions.csv
        required: true
        type: string
      generateblogpostcandidatesdata100_500_keyword_suggestions_blogpost_file: # /github/workspace/_drafts/kw_blogpost_candidates_100_500.csv
        required: true
        type: string
      generateblogpostcandidatesdata100_500_keyword_min_volume_eligible: # 100
        required: true
        type: number
      generateblogpostcandidatesdata100_500_keyword_max_volume_eligible: # 500
        required: true
        type: number

      suggestionstoblogpost10_100_keyword_suggestions_generation_folder: # /github/workspace/_drafts
        required: true
        type: string
      suggestionstoblogpost10_100_keyword_suggestion: # kw_blogpost_candidates_10_100.csv
        required: true
        type: string
      suggestionstoblogpost10_100_drafts_path: # /github/workspace/_drafts/
        required: true
        type: string
      suggestionstoblogpost10_100_keyword_seed: # /github/workspace/_drafts/keywords.csv
        required: true
        type: string
      suggestionstoblogpost10_100_batch_size: # 5
        required: true
        type: number
      suggestionstoblogpost10_100_language: # fr
        required: true
        type: string
      

      suggestionstoblogpost100_500_keywordsuggestionsgenerationfolder: # /github/workspace/_drafts
        required: true
        type: string
      suggestionstoblogpost100_500_keywordsuggestion: # kw_blogpost_candidates_10_100.csv
        required: true
        type: string
      suggestionstoblogpost100_500_draftspath: # /github/workspace/_drafts/
        required: true
        type: string
      suggestionstoblogpost100_500_keywordseed: # /github/workspace/_drafts/keywords.csv
        required: true
        type: string
      suggestionstoblogpost100_500_batchsize: # 5
        required: true
        type: number
      suggestionstoblogpost100_500_language: # fr
        required: true
        type: string

      generatenewyoutubevids_srcfolder: # /github/workspace/_drafts/
        required: true
        type: string
      generatenewyoutubevids_youtubeapikey: # ${{ secrets.YOUTUBE_API_KEY }}
        required: true
        type: string
      generatenewyoutubevids_ytsearchresultsfile: # /github/workspace/_drafts/youtube_search_results.csv
        required: true
        type: string
      generatenewyoutubevids_ytalreadyusedvids: # /github/workspace/_drafts/youtube_videos_used.csv
        required: true
        type: string
      generatenewyoutubevids_language: # fr
        required: true
        type: string
      generatenewyoutubevids_country: # fr
        required: true
        type: string

      transcribeytvideos_draftspath: # /github/workspace/_drafts/
        required: true
        type: string

      
    secrets:
      unsplash_access_key:
        required: true
      cloudinary_url:
        required: true

jobs:
  check-runner:
    runs-on: ubuntu-latest
    outputs:
      runner-label: ${{ steps.set-runner.outputs.runner-label }}

    steps:
      - name: Set runner
        id: set-runner
        uses: BrightSoftwares/blogpost-tools/check-runner@main
        env:
          # CHECK_RUNNER_TOKEN: ${{ inputs.CHECK_RUNNER_ACCESS_TOKEN }}
          CHECK_RUNNER_TOKEN: ${{ inputs.GITHUB_TOKEN }}
          GITHUB_REPO_OWNER: ${{ inputs.repository_owner }}
          GITHUB_REPOSITORY: ${{ inputs.repository }}
      
  jekyll:
    # runs-on: ubuntu-latest
    # runs-on: self-hosted
    needs: check-runner
    runs-on: ${{ steps.set-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Generate new keyword suggestions
        uses: BrightSoftwares/blogpost-tools/keyword-suggestion@main
        with:
          keyword_seed: ${{ inputs.repository }} # /github/workspace/_drafts/keywords.csv
          keyword_suggestions_generation_folder: ${{ inputs.repository }} # /github/workspace/_drafts
          drafts_path: ${{ inputs.repository }} # /github/workspace/_drafts/
          keyword_suggestions_blogpost_file: ${{ inputs.repository }} # keyword_suggestions_merged_blogpost_candidates.csv
          keyword_min_volume_eligible: ${{ inputs.repository }} # 1
          keyword_max_volume_eligible: ${{ inputs.repository }} # 500000

      - name: Intermediary commit to save generated keywords
        run: |
          # date > generated.txt
          CHANGES_EXIST="$(git status --porcelain | wc -l)"
          echo "There are $CHANGES_EXIST changes to commit"
          if [ "$CHANGES_EXIST" -eq 0 ]; then
            echo "There are no changes to commit"
          else
            echo "Committing changes"
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "generated and changed files"
            git pull --rebase
            git push
          fi
          
      - name: Generate blog post candidates data 10-100
        uses: BrightSoftwares/blogpost-tools/blogpost-candidates-generation@main
        with:
        
          src_folder: ${{ inputs.repository }} # /github/workspace/_drafts/
          keyword_suggestion_generation_folder: ${{ inputs.repository }} # /github/workspace/_drafts/
          keyword_suggestion_generation_file: ${{ inputs.repository }} # /github/workspace/_drafts/keyword_suggestions.csv
          keyword_suggestions_blogpost_file: ${{ inputs.repository }} # /github/workspace/_drafts/kw_blogpost_candidates_10_100.csv
          keyword_min_volume_eligible: ${{ inputs.repository }} # 10
          keyword_max_volume_eligible: ${{ inputs.repository }} # 100
          
      
      - name: Generate blog post candidates data 100-500
        uses: BrightSoftwares/blogpost-tools/blogpost-candidates-generation@main
        with:
        
          src_folder: ${{ inputs.repository }} # /github/workspace/_drafts/
          keyword_suggestion_generation_folder: ${{ inputs.repository }} # /github/workspace/_drafts/
          keyword_suggestion_generation_file: ${{ inputs.repository }} # /github/workspace/_drafts/keyword_suggestions.csv
          keyword_suggestions_blogpost_file: ${{ inputs.repository }} # /github/workspace/_drafts/kw_blogpost_candidates_100_500.csv
          keyword_min_volume_eligible: ${{ inputs.repository }} # 100
          keyword_max_volume_eligible: ${{ inputs.repository }} # 500
          
      - name: Suggestions to blogpost 10-100
        uses: BrightSoftwares/blogpost-tools/suggestions-to-blogpost@main
        with:
          keyword_suggestions_generation_folder: ${{ inputs.repository }} # /github/workspace/_drafts
          keyword_suggestion: ${{ inputs.repository }} # kw_blogpost_candidates_10_100.csv
          drafts_path: ${{ inputs.repository }} # /github/workspace/_drafts/
          keyword_seed: ${{ inputs.repository }} # /github/workspace/_drafts/keywords.csv
          batch_size: ${{ inputs.repository }} # 5
          language: ${{ inputs.repository }} # fr
          
      - name: Suggestions to blogpost 100-500
        uses: BrightSoftwares/blogpost-tools/suggestions-to-blogpost@main
        with:
          keyword_suggestions_generation_folder: ${{ inputs.repository }} # /github/workspace/_drafts
          keyword_suggestion: ${{ inputs.repository }} # kw_blogpost_candidates_100_500.csv
          drafts_path: ${{ inputs.repository }} # /github/workspace/_drafts/
          keyword_seed: ${{ inputs.repository }} # /github/workspace/_drafts/keywords.csv
          batch_size: ${{ inputs.repository }} # 5
          language: ${{ inputs.repository }} # fr
          
      - name: Generate new youtube vids
        uses: BrightSoftwares/blogpost-tools/youtube-vid-finder@main
        with:
          src_folder: ${{ inputs.repository }} # /github/workspace/_drafts/
          youtube_api_key: ${{ inputs.repository }} # ${{ secrets.YOUTUBE_API_KEY }}
          yt_search_results_file: ${{ inputs.repository }} # /github/workspace/_drafts/youtube_search_results.csv
          yt_already_used_vids: ${{ inputs.repository }} # /github/workspace/_drafts/youtube_videos_used.csv
          language: ${{ inputs.repository }} # fr
          country: ${{ inputs.repository }} # fr
      
      - name: transcribe-yt-videos
        uses: BrightSoftwares/blogpost-tools/transcript-downloader@main
        with:
          drafts_path: ${{ inputs.repository }} # /github/workspace/_drafts/

      - name: Compress too big files and remove them
        run: |
          echo "Compressing the 2 big files"
          tar -zcvf _drafts/kw_blogpost_candidates_10_100.csv.tar.gz _drafts/kw_blogpost_candidates_10_100.csv
          tar -zcvf _drafts/kw_blogpost_candidates_100_500.csv.tar.gz _drafts/kw_blogpost_candidates_100_500.csv
          echo "Compression done"
          ls -lah _drafts/

      - name: Ignore files that are bigger than 50Mb
        run: |
          #echo "Ignore files that are bigger than 50Mb"
          #find . -size +50M | cat >> .gitignore
          #cat .gitignore
          echo "Delete the files that are bigger than +50Mb"
          find -type f \( -name "kw_blogpost_candidates_*" \) -size +50M -delete
          
      - run: |
          # date > generated.txt
          CHANGES_EXIST="$(git status --porcelain | wc -l)"
          echo "There are $CHANGES_EXIST changes to commit"
          if [ "$CHANGES_EXIST" -eq 0 ]; then
            echo "There are no changes to commit"
          else
            echo "Committing changes"
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "generated and changed files"
            git pull --rebase
            git push
          fi
